version: '3.8'

services:
  # Service 'app' untuk menjalankan PHP-FPM (web server)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    environment:
      - APP_NAME=Laravel
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - QUEUE_CONNECTION=database
    networks:
      - app-network

  # Service 'nginx' sebagai web server
  nginx:
    image: nginx:1.25.3-alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "8009:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  # Service 'queue' sebagai queue worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-queue
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - QUEUE_CONNECTION=database
    depends_on:
      - app
      - db
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    networks:
      - app-network

  # Service 'db' untuk PostgreSQL
  db:
    image: postgres:16
    container_name: laravel-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local
